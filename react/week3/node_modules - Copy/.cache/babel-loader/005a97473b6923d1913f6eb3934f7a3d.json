{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\react class3\\\\my-app\\\\src\\\\todoItem.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoItem = props => {\n  const selectCheckBox = () => {\n    console.log('selectCheckBox');\n    console.log(props.shift.completed);\n    props.shift.completed = !props.shift.completed;\n    props.setShifts(prev => prev.filter(item => item));\n  };\n\n  const editTodo = value => {\n    console.log('editTodo');\n    console.log(value);\n    props.shift.description = value;\n    props.setShifts(prev => prev.filter(item => item));\n  };\n\n  const onDelete = () => {\n    props.setShifts(prev => prev.filter(item => item.description !== props.shift.description));\n  };\n\n  const onEdit = () => {\n    console.log('onEdit');\n    console.log(props.shift.editMode);\n    props.shift.editMode = true;\n    props.setShifts(prev => prev.filter(item => item));\n  };\n\n  const onUpdate = () => {\n    console.log('onUpdate');\n    console.log(props.shift.editMode);\n    props.shift.editMode = false;\n    props.setShifts(prev => prev.filter(item => item));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"myList\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        textDecoration: props.shift.completed ? \"line-through\" : null,\n        display: !props.shift.editMode ? \"inline-block\" : \"none\"\n      },\n      children: [props.shift.description, \" \\xA0 | \\xA0\", props.shift.deadline, \"\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      style: {\n        display: props.shift.editMode ? \"inline-block\" : \"none\"\n      },\n      value: props.shift.description,\n      onChange: e => editTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onClick: e => {\n        selectCheckBox(e);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onDelete,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        display: !props.shift.editMode ? \"inline-block\" : \"none\"\n      },\n      onClick: onEdit,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        display: props.shift.editMode ? \"inline-block\" : \"none\"\n      },\n      onClick: onUpdate,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ToDoItem;\nexport default ToDoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoItem\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/react class3/my-app/src/todoItem.js"],"names":["React","ToDoItem","props","selectCheckBox","console","log","shift","completed","setShifts","prev","filter","item","editTodo","value","description","onDelete","onEdit","editMode","onUpdate","textDecoration","display","deadline","e","target"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nconst ToDoItem=(props)=>{\r\n    \r\n  const selectCheckBox=()=>{\r\n    console.log('selectCheckBox');\r\n    console.log(props.shift.completed)\r\n    props.shift.completed = !props.shift.completed;\r\n    props.setShifts(prev => prev.filter((item) => item))\r\n  }\r\n\r\n  const editTodo=(value)=>{\r\n    console.log('editTodo');\r\n    console.log(value);\r\n    props.shift.description=value;\r\n    props.setShifts(prev => prev.filter((item) => item))\r\n  }\r\n\r\n  const onDelete=()=>{\r\n    props.setShifts(prev => prev.filter((item) => item.description !== props.shift.description))\r\n  }\r\n\r\n  const onEdit=()=>{\r\n    console.log('onEdit');\r\n    console.log(props.shift.editMode)\r\n    props.shift.editMode = true;\r\n    props.setShifts(prev => prev.filter((item) => item))\r\n  }\r\n\r\n  const onUpdate=()=>{\r\n    console.log('onUpdate');\r\n    console.log(props.shift.editMode)\r\n    props.shift.editMode = false;\r\n    props.setShifts(prev => prev.filter((item) => item))\r\n  }\r\n\r\n   return (\r\n        <li className='myList'>\r\n            \r\n            <label style={{ textDecoration: props.shift.completed ? \"line-through\" : null, \r\n                   display: !props.shift.editMode ? \"inline-block\" : \"none\" }} >\r\n              {props.shift.description} &nbsp; | &nbsp;\r\n              {props.shift.deadline}\r\n              &nbsp;\r\n             </label>\r\n\r\n             <input type=\"text\" style={{display: props.shift.editMode ? \"inline-block\" : \"none\"}} value={props.shift.description} \r\n                     onChange={(e) => editTodo(e.target.value)}></input>\r\n\r\n             <input type=\"checkbox\" onClick={(e) => {\r\n                                selectCheckBox(e);\r\n                            }} />\r\n       \r\n            <button onClick={onDelete}>Delete</button>\r\n      \r\n            <button style={{display: !props.shift.editMode ? \"inline-block\" : \"none\"}} onClick={onEdit}>Edit</button>\r\n            <button style={{display: props.shift.editMode ? \"inline-block\" : \"none\"}} onClick={onUpdate}>Update</button>\r\n        </li>\r\n       \r\n            \r\n   )\r\n}\r\nexport default ToDoItem;\r\n"]},"metadata":{},"sourceType":"module"}