{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\react class3\\\\my-app\\\\src\\\\datafetch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DataFetching = props => {\n  _s();\n\n  const [cats, setCats] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const apiUrl = 'https://aws.random.cat/meow';\n  const AddCat = useCallback(() => {\n    fetch(apiUrl).then(res => res.json()).then(result => {\n      const {\n        file\n      } = result;\n      setCats(lastState => {\n        return lastState.concat(file);\n      }); //const nextCats=cats.concat(file)\n      //setCats(nextCats)\n      //console.log(\"see states\",cats,nextCats)\n      //console.log(\"file\",file)\n    });\n    console.log(\"i mounted\");\n  }, []);\n  useEffect(() => {\n    AddCat();\n  }, [AddCat]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddCat,\n      children: \"add cat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"i want to fetch cat images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), cats.map(cat => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: cat,\n        alt: \"\",\n        height: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataFetching, \"rmolK+dadrb0ZVPy7PN9QagCnpE=\");\n\n_c = DataFetching;\nexport default DataFetching;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataFetching\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/react class3/my-app/src/datafetch.js"],"names":["React","useEffect","useState","useCallback","DataFetching","props","cats","setCats","isLoading","setIsLoading","apiUrl","AddCat","fetch","then","res","json","result","file","lastState","concat","console","log","map","cat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,WAAjC,QAAmD,OAAnD;;;AAEA,MAAMC,YAAY,GAAEC,KAAD,IAAS;AAAA;;AACxB,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAeL,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAK,CAACM,SAAD,EAAWC,YAAX,IAAyBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMQ,MAAM,GAAC,6BAAb;AAEA,QAAMC,MAAM,GAACR,WAAW,CAAC,MAAI;AACzBS,IAAAA,KAAK,CAACF,MAAD,CAAL,CACCG,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAEMG,MAAM,IAAE;AACV,YAAM;AAACC,QAAAA;AAAD,UAAOD,MAAb;AACAT,MAAAA,OAAO,CAAEW,SAAS,IAAE;AAChB,eACIA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CADJ;AAGH,OAJM,CAAP,CAFU,CAOV;AACA;AACA;AACA;AACH,KAbD;AAcAG,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,GAhBuB,EAgBtB,EAhBsB,CAAxB;AAmBApB,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,MAAM;AACT,GAFQ,EAEP,CAACA,MAAD,CAFO,CAAT;AAKA,sBACI;AAAA,eAEQH,SAFR,eAII;AAAQ,MAAA,OAAO,EAAEG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,EAOOL,IAAI,CAACgB,GAAL,CAASC,GAAG,IAAE;AACT,0BACI;AAAK,QAAA,GAAG,EAAEA,GAAV;AAAe,QAAA,GAAG,EAAC,EAAnB;AAAsB,QAAA,MAAM,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJF,CAPP;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA9CD;;GAAMnB,Y;;KAAAA,Y;AA+CN,eAAeA,YAAf","sourcesContent":["import React,{useEffect,useState,useCallback} from \"react\";\r\n\r\nconst DataFetching=(props)=>{\r\n    const[cats,setCats]=useState([])\r\n    const[isLoading,setIsLoading]=useState(true)\r\n    const apiUrl='https://aws.random.cat/meow';\r\n\r\n    const AddCat=useCallback(()=>{\r\n        fetch(apiUrl)\r\n        .then(res=>res.json())\r\n        .then(result=>{\r\n            const {file}=result\r\n            setCats((lastState=>{\r\n                return(\r\n                    lastState.concat(file)\r\n                )\r\n            }))\r\n            //const nextCats=cats.concat(file)\r\n            //setCats(nextCats)\r\n            //console.log(\"see states\",cats,nextCats)\r\n            //console.log(\"file\",file)\r\n        })\r\n        console.log(\"i mounted\");\r\n    },[])\r\n    \r\n\r\n    useEffect(()=>{\r\n        AddCat()\r\n    },[AddCat])\r\n\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                isLoading \r\n            }\r\n            <button onClick={AddCat}>add cat</button>\r\n            <p>i want to fetch cat images</p>\r\n            {\r\n               cats.map(cat=>{\r\n                    return(\r\n                        <img src={cat} alt=\"\" height=\"200\"/>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default DataFetching;"]},"metadata":{},"sourceType":"module"}